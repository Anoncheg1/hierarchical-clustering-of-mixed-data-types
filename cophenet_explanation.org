-*- mode: Org; fill-column: 85; -*-

#+STARTUP: inlineimages
:results file graphics :file 1.png
#+begin_src python :results output
from scipy.spatial.distance import pdist
from scipy.spatial.distance import squareform
import numpy as np
from scipy.cluster.hierarchy import single, cophenet
X = [[0, 0], [0, 1], [1, 0],
[0, 4], [0, 3], [1, 4],
[4, 0], [3, 0], [4, 1],
[4, 4], [3, 4], [4, 3]]
# shape of X:
# x x x x
# x     x
# x     x
# x x x x
print(X)

Z = pdist(X)
Z2 = squareform(Z)
print("Distances:")
print(np.round(Z2,0))
print()

C = cophenet(single(Z), Z)
print("Cophenet coefficient:", C[0])
print()
print("Cophenet matrix:")
C2 = squareform(C[1])
C3 = np.triu(C2)
print(C3)
#+end_src

/results/:
#+begin_example
[[0, 0], [0, 1], [1, 0], [0, 4], [0, 3], [1, 4], [4, 0], [3, 0], [4, 1], [4, 4], [3, 4], [4, 3]]
Distances:
[[0. 1. 1. 4. 3. 4. 4. 3. 4. 6. 5. 5.]
 [1. 0. 1. 3. 2. 3. 4. 3. 4. 5. 4. 4.]
 [1. 1. 0. 4. 3. 4. 3. 2. 3. 5. 4. 4.]
 [4. 3. 4. 0. 1. 1. 6. 5. 5. 4. 3. 4.]
 [3. 2. 3. 1. 0. 1. 5. 4. 4. 4. 3. 4.]
 [4. 3. 4. 1. 1. 0. 5. 4. 4. 3. 2. 3.]
 [4. 4. 3. 6. 5. 5. 0. 1. 1. 4. 4. 3.]
 [3. 3. 2. 5. 4. 4. 1. 0. 1. 4. 4. 3.]
 [4. 4. 3. 5. 4. 4. 1. 1. 0. 3. 3. 2.]
 [6. 5. 5. 4. 4. 3. 4. 4. 3. 0. 1. 1.]
 [5. 4. 4. 3. 3. 2. 4. 4. 3. 1. 0. 1.]
 [5. 4. 4. 4. 4. 3. 3. 3. 2. 1. 1. 0.]]

Cophenet coefficient: 0.7902234600944454

Cophenet matrix:
[[0. 1. 1. 2. 2. 2. 2. 2. 2. 2. 2. 2.]
 [0. 0. 1. 2. 2. 2. 2. 2. 2. 2. 2. 2.]
 [0. 0. 0. 2. 2. 2. 2. 2. 2. 2. 2. 2.]
 [0. 0. 0. 0. 1. 1. 2. 2. 2. 2. 2. 2.]
 [0. 0. 0. 0. 0. 1. 2. 2. 2. 2. 2. 2.]
 [0. 0. 0. 0. 0. 0. 2. 2. 2. 2. 2. 2.]
 [0. 0. 0. 0. 0. 0. 0. 1. 1. 2. 2. 2.]
 [0. 0. 0. 0. 0. 0. 0. 0. 1. 2. 2. 2.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 2. 2. 2.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]]
#+end_example
